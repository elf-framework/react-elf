{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { KeyValue, StringKeyValue } from \"@react-elf-types/shared\";\nexport const NumberStyleKeys = {\n  width: true,\n  height: true,\n  top: true,\n  left: true,\n  right: true,\n  bottom: true,\n  maxWidth: true,\n  maxHeight: true,\n  minWidth: true,\n  minHeight: true,\n  margin: true,\n  marginTop: true,\n  marginRight: true,\n  marginBottom: true,\n  marginLeft: true,\n  padding: true,\n  paddingTop: true,\n  paddingRight: true,\n  paddingBottom: true,\n  paddingLeft: true,\n  border: true,\n  borderTop: true,\n  borderRight: true,\n  borderBottom: true,\n  borderLeft: true,\n  borderWidth: true,\n  borderTopWidth: true,\n  borderRightWidth: true,\n  borderBottomWidth: true,\n  borderLeftWidth: true,\n  gap: true,\n};\n\n/**\n * convertNumberStyleValue(\"width\", 10) => \"10px\"\n */\nexport function convertNumberStyleValue(key: string, value: unknown) {\n  if (typeof value === \"number\") {\n    if (NumberStyleKeys[key]) {\n      value = value + \"px\";\n    }\n  }\n\n  return value;\n}\n\nexport function propertyMap(\n  styles: KeyValue = {},\n  mapper = {}\n): KeyValue | undefined {\n  const styleObj = {};\n  Object.keys(styles).forEach((key) => {\n    if (typeof styles[key] !== \"undefined\") {\n      styleObj[mapper[key] || key] = convertNumberStyleValue(key, styles[key]);\n    }\n  });\n  return Object.keys(styleObj).length ? styleObj : undefined;\n}\n\n// cache style keys\nconst styleKeys = {};\nconst uppercasePattern = /([A-Z])/g;\n\n/**\n * convert style key to css key (camelCase to kebab-case)\n *\n * backgroundColor -> background-color\n *\n */\nexport function convertStyleKey(key: string): string {\n  // check cache\n  if (styleKeys[key]) {\n    return styleKeys[key];\n  }\n\n  const upperKey = key.replace(uppercasePattern, \"-$1\").toLowerCase();\n\n  styleKeys[key] = upperKey;\n\n  return upperKey;\n}\n\n/**\n * prefixed style key\n *\n * makeCssVariablePrefixMap(\"--elf--ui\", { backgroundColor: true });\n * =>\n * {\n *  backgroundColor: \"--elf--ui-background-color\",\n * }\n *\n */\nexport function makeCssVariablePrefixMap(\n  prefix: string,\n  obj: KeyValue = {}\n): StringKeyValue {\n  const newObj = {};\n\n  Object.keys(obj).forEach((key) => {\n    newObj[key] = prefix + \"-\" + convertStyleKey(key);\n  });\n\n  return newObj;\n}\n\n\n\nexport const ComponentPropsToStylePropsMap = {\n  alignContent: \"alignContent\",\n  alignItems: \"alignItems\",\n  alignSelf: \"alignSelf\",\n  area: \"gridArea\",\n  autoColumns: \"gridAutoColumns\",\n  autoFlow: \"gridAutoFlow\",\n  autoRows: \"gridAutoRows\",\n  backgroundColor: \"backgroundColor\",\n  backgroundImage: \"backgroundImage\",\n  basis: \"flexBasis\",\n  border: \"border\",\n  borderRadius: \"borderRadius\",\n  bottom: \"bottom\",\n  boxShadow: \"boxShadow\",\n  color: \"color\",\n  column: \"gridColumn\",\n  columnEnd: \"gridColumnEnd\",\n  columnGap: \"columnGap\",\n  columnSpan: \"gridColumn\", // Will set gridColumn if no `row` prop given\n  columnStart: \"gridColumnStart\",\n  direction: \"flexDirection\",\n  display: \"display\",\n  flex: \"flex\",\n  fontFamily: \"fontFamily\",\n  fontSize: \"fontSize\",\n  fontStyle: \"fontStyle\",\n  fontWeight: \"fontWeight\",\n  gap: \"gap\",\n  grow: \"flexGrow\",\n  height: \"height\",\n  justifyContent: \"justifyContent\",\n  left: \"left\",\n  letterSpacing: \"letterSpacing\",\n  lineHeight: \"lineHeight\",\n  margin: \"margin\",\n  marginBlock: \"marginBlock\",\n  marginBlockEnd: \"marginBlockEnd\",\n  marginBlockStart: \"marginBlockStart\",\n  marginBottom: \"marginBlockEnd\",\n  marginInline: \"marginInline\",\n  marginInlineEnd: \"marginInlineEnd\",\n  marginInlineStart: \"marginInlineStart\",\n  marginLeft: \"marginInlineStart\",\n  marginRight: \"marginInlineEnd\",\n  marginTop: \"marginBlockStart\",\n  maxHeight: \"maxHeight\",\n  maxWidth: \"maxWidth\",\n  minHeight: \"minHeight\",\n  minWidth: \"minWidth\",\n  objectFit: \"objectFit\",\n  objectPosition: \"objectPosition\",\n  opacity: \"opacity\",\n  order: \"order\",\n  overflow: \"overflow\",\n  padding: \"padding\",\n  paddingBlock: \"paddingBlock\",\n  paddingBlockEnd: \"paddingBlockEnd\",\n  paddingBlockStart: \"paddingBlockStart\",\n  paddingBottom: \"paddingBlockEnd\",\n  paddingInline: \"paddingInline\",\n  paddingInlineEnd: \"paddingInlineEnd\",\n  paddingInlineStart: \"paddingInlineStart\",\n  paddingLeft: \"paddingInlineStart\",\n  paddingRight: \"paddingInlineEnd\",\n  paddingTop: \"paddingBlockStart\",\n  position: \"position\",\n  resize: \"resize\",\n  right: \"right\",\n  row: \"gridRow\",\n  rowEnd: \"gridRowEnd\",\n  rowGap: \"rowGap\",\n  rowSpan: \"gridRow\", // Will set gridRow if no `row` prop given\n  rowStart: \"gridRowStart\",\n  shrink: \"flexShrink\",\n  templateAreas: \"gridTemplateAreas\",\n  templateColumns: \"gridTemplateColumns\",\n  templateRows: \"gridTemplateRows\",\n  textAlign: \"textAlign\",\n  textDecoration: \"textDecoration\",\n  textTransform: \"textTransform\",\n  top: \"top\",\n  transform: \"transform\",\n  transformOrigin: \"transformOrigin\",\n  width: \"width\",\n  whiteSpace: \"whiteSpace\",\n  wrap: \"flexWrap\",\n  zIndex: \"zIndex\",\n};\n\n\n/**\n * properties key \uC911\uC5D0 style key\uAC00 \uC788\uB294\uC9C0 \uD655\uC778\n * style key \uC640 none style key \uB97C \uBD84\uB9AC\uD574\uC11C \uBC18\uD658\n *\n */\nexport function splitStyleKeyAndNoneStyleKey(properties: KeyValue) {\n  const style = {};\n  const noneStyle = {};\n\n  Object.keys(properties).forEach((key) => {\n    const value = properties[key];\n    const styleKey = ComponentPropsToStylePropsMap[key];\n    if (styleKey) {\n      style[styleKey] = value;\n    } else {\n      noneStyle[key] = value;\n    }\n  });\n\n  return { style, noneStyle };\n}\n"],
  "mappings": "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",
  "names": []
}
